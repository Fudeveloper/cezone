# 原则 ：开放封闭
# 封闭：已实现的功能代码块
# 开放：对扩展开放


# 闭包
def d1(fun):
    def inner():
        print('--方法前的验证--')
        # 在这里，如果有一个变量为方法，那么，在inner方法执行时，既执行print，也执行该方法
        fun()
    return inner

def f1():
    print('---f1---')

# # 返回闭包d1中的inner方法对象
# inner = d1(f1)
# # 调用inner方法
# inner()

# 类似于17-20行代码：
# 返回闭包d1中的inner方法对象,并将该对象赋值给f1
f1 = d1(f1)
# 调用inner方法（现在名为f1）
f1()

# 给人的感觉是：在没有改变方法f1代码的情况下，增加了f1方法的功能